package net.leskowsky;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import static net.leskowsky.Day8.findAntinodes;
import static org.junit.jupiter.api.Assertions.assertEquals;

class Day8Test {
    private Day8.SignalMap parse(String s) {
        var signals = new HashMap<Character, List<Point>>();

        var lines = s.split("\n");
        for (int j = 0; j < lines.length; j++) {
            var line = lines[j];
            for (int i = 0; i < line.length(); i++) {
                char c = line.charAt(i);
                if (c == '.' || c == '#') {
                    continue;
                }
                var x = signals.getOrDefault(c, new ArrayList<>());
                x.add(new Point(i, j));
                signals.put(c, x);
            }
        }

        return new Day8.SignalMap(signals, lines[0].length(), lines.length);
    }

    @Test
    void testFindAntinodes() {
        var s = """
                ..........
                ..........
                ..........
                ....a.....
                ..........
                .....a....
                ..........
                ..........
                ..........
                ..........""";
        var signals = parse(s);
        assertEquals(2, findAntinodes(signals).size());

        s = """
                ..........
                ..........
                ....a.....
                ......a...
                ....a.....
                ..........
                ..........
                ..........""";
        signals = parse(s);
        assertEquals(6, findAntinodes(signals).size());

        s = """
                ..........
                ...#......
                #.........
                ....a.....
                ........a.
                .....a....
                ..#.......
                ......A...
                ..........
                ..........""";
        signals = parse(s);
        assertEquals(4, findAntinodes(signals).size());

        s = """
                ......#....#
                ...#....0...
                ....#0....#.
                ..#....0....
                ....0....#..
                .#....A.....
                ...#........
                #......#....
                ........A...
                .........A..
                ..........#.
                ..........#.""";
        signals = parse(s);
        System.out.println(findAntinodes(signals));
        assertEquals(14, findAntinodes(signals).size());
    }

    @Test
    void part1() {
        // find signals
        // foreach signal
        //   find pairs
        //   foreach pair
        //     find antinodes
        // count antinodes
        var s = """
                ..F..........L............5.......................
                ............................L.U...................
                ..................................................
                .............z.L.........5.....4........8....1.P..
                ...F................D..4.8.............P......J...
                ......f................8....z........U..J.........
                .......D..f........B..o.........m..........JX.....
                ......o...5........F..........m.......6....X......
                ....s........f...n.....54.U....E................3.
                ....F.......l.......k..............6.3n...........
                L..........z....7..U............E...k.P..3b.......
                ..s.......D..........h...k.....G........y..m......
                d..............o.........X............8...n.......
                ...........o.......D.......J......................
                ....................z.....1.9....G6..Y.b....y.....
                .d................4.........EN..G.9.b.............
                .......................7..........................
                ..d................l.........pc..n................
                ..............l........1Nm..........G..9..........
                .f.........s...7........1........E........X....y..
                .............d...................6......v.........
                ........................h.............B...........
                .......l.......................h........B.....p..y
                ........w......A................................M.
                .....s.................O...........p.......2......
                ...............9.........................B.b......
                ......................w..0..............H.........
                .....................w7.j..O....................e.
                .A......Z...................K...h...M.............
                .................S....KZ..........................
                .................V..............x.................
                ......Z...............................N...........
                .......................a..........................
                ....A..........................K.................M
                .......Z..................ON.KT.........c.........
                ...........................YO....t.......x........
                ..............g........w.T.............k...c......
                ..........................v.......................
                ....S..................................u..........
                ..........0............v...............c...e..C.p.
                .......S............V.j........v.......x..........
                ......S..0W.......HT....a.........................
                A..............H...W..a......C....................
                ................T.2.....V......H..t...u........C..
                .................g.j....2.........u..t...e......C.
                .........W...........g.......................u....
                ........W...0.................Y.........e.tM......
                ................g..a.j............................
                ..................................................
                .................2........Y...........x...........
                """;
        var signals = parse(s);
        System.out.println(findAntinodes(signals).size());
    }
}